openapi: 3.0.3
info:
  title: Inventory Management API
  version: 1.0.0
  description: API for user registration, authentication, and product inventory management.
servers:
  - url: http://localhost:4000 || https://inventory-management-production-9d5c.up.railway.app/
paths:
  /register:
    post:
      summary: Register a new user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [username, password]
              properties:
                username:
                  type: string
                  example: esha
                password:
                  type: string
                  example: esha
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successfully created a new user
        '400':
          description: Bad request (validation failed)
        '500':
          description: Server error
  /login:
    post:
      summary: Login user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [username, password]
              properties:
                username:
                  type: string
                  example: esha
                password:
                  type: string
                  example: esha
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '401':
          description: Invalid credentials
        '500':
          description: Server error
  /products:
    get:
      summary: Get all products (paginated)
      tags:
        - Products
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            example: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            example: 10
          description: Items per page
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  total:
                    type: integer
                    example: 25
                  page:
                    type: integer
                    example: 1
                  limit:
                    type: integer
                    example: 10
        '401':
          description: Unauthorized
        '500':
          description: Server error
    post:
      summary: Add a new product
      tags:
        - Products
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreate'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Product'
        '400':
          description: Bad request (validation failed)
        '401':
          description: Unauthorized
        '500':
          description: Server error
  /products/{id}/quantity:
    put:
      summary: Update product quantity
      tags:
        - Products
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Product ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [quantity]
              properties:
                quantity:
                  type: integer
                  example: 48
      responses:
        '200':
          description: Quantity updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Quantity updated successfully
        '401':
          description: Unauthorized
        '404':
          description: Product not found
        '500':
          description: Server error
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        username:
          type: string
          example: esha
        createdAt:
          type: string
          format: date-time
          example: 2025-08-10T12:34:56Z
    Product:
      type: object
      properties:
        product_id:
          type: integer
          example: 1
        name:
          type: string
          example: Wireless Mouse
        type:
          type: string
          example: Electronics
        sku:
          type: string
          example: WM-12346
        image_url:
          type: string
          example: https://example.com/images/wireless-mouse.jpg
        description:
          type: string
          example: A high-precision wireless mouse with ergonomic design.
        quantity:
          type: integer
          example: 50
        price:
          type: number
          format: float
          example: 999.99
        userId:
          type: integer
          example: 7
    ProductCreate:
      type: object
      required:
        - name
        - type
        - quantity
        - price
      properties:
        name:
          type: string
          example: Wireless Mouse
        type:
          type: string
          example: Electronics
        sku:
          type: string
          example: WM-12346
        image_url:
          type: string
          example: https://example.com/images/wireless-mouse.jpg
        description:
          type: string
          example: A high-precision wireless mouse with ergonomic design.
        quantity:
          type: integer
          example: 50
        price:
          type: number
          format: float
          example: 999.99
